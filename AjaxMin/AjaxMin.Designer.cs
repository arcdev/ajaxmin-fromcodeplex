//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Ajax.Utilities {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AjaxMin {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AjaxMin() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Ajax.Utilities.AjaxMin", typeof(AjaxMin).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Scope - starts at line {1}, col {2} {3}.
        /// </summary>
        internal static string BlockScopeHeader {
            get {
                return ResourceManager.GetString("BlockScopeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch.
        /// </summary>
        internal static string BlockTypeCatch {
            get {
                return ResourceManager.GetString("BlockTypeCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With.
        /// </summary>
        internal static string BlockTypeWith {
            get {
                return ResourceManager.GetString("BlockTypeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting input type switches or input file extensions (JS and CSS).
        /// </summary>
        internal static string ConflictingInputType {
            get {
                return ResourceManager.GetString("ConflictingInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  [{1} references renamed to {0}].
        /// </summary>
        internal static string CrunchedTo {
            get {
                return ResourceManager.GetString("CrunchedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source files in the input group.
        /// </summary>
        internal static string CrunchGroupNoSource {
            get {
                return ResourceManager.GetString("CrunchGroupNoSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minifying file &apos;{0}&apos;....
        /// </summary>
        internal static string CrunchingFile {
            get {
                return ResourceManager.GetString("CrunchingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minifying from STDIN....
        /// </summary>
        internal static string CrunchingStdIn {
            get {
                return ResourceManager.GetString("CrunchingStdIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done..
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding switch must be followed by valid encoding name.
        /// </summary>
        internal static string EncodingArgMustHaveEncoding {
            get {
                return ResourceManager.GetString("EncodingArgMustHaveEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fallback character encoding failed.
        /// </summary>
        internal static string FallbackEncodingFailed {
            get {
                return ResourceManager.GetString("FallbackEncodingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function scope must have function object.
        /// </summary>
        internal static string FuncitonScopeHasNoObject {
            get {
                return ResourceManager.GetString("FuncitonScopeHasNoObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} - starts at line {2}, col {3} {4} {5}.
        /// </summary>
        internal static string FunctionHeader {
            get {
                return ResourceManager.GetString("FunctionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} references.
        /// </summary>
        internal static string FunctionInfoReferences {
            get {
                return ResourceManager.GetString("FunctionInfoReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function Expression.
        /// </summary>
        internal static string FunctionTypeExpression {
            get {
                return ResourceManager.GetString("FunctionTypeExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function.
        /// </summary>
        internal static string FunctionTypeFunction {
            get {
                return ResourceManager.GetString("FunctionTypeFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Get.
        /// </summary>
        internal static string FunctionTypePropGet {
            get {
                return ResourceManager.GetString("FunctionTypePropGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Set.
        /// </summary>
        internal static string FunctionTypePropSet {
            get {
                return ResourceManager.GetString("FunctionTypePropSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Objects.
        /// </summary>
        internal static string GlobalObjectsHeader {
            get {
                return ResourceManager.GetString("GlobalObjectsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML &lt;input&gt; node missing required path attribute.
        /// </summary>
        internal static string InputNoPathAttr {
            get {
                return ResourceManager.GetString("InputNoPathAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing input XML: {0}.
        /// </summary>
        internal static string InputXmlError {
            get {
                return ResourceManager.GetString("InputXmlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler Error.
        /// </summary>
        internal static string InternalCompilerError {
            get {
                return ResourceManager.GetString("InternalCompilerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid switch: {0}.
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input encoding name: {0}.
        /// </summary>
        internal static string InvalidInputEncoding {
            get {
                return ResourceManager.GetString("InvalidInputEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid kill switch value: &apos;{0}&apos; must be a valid decimal number.
        /// </summary>
        internal static string InvalidKillSwitchArg {
            get {
                return ResourceManager.GetString("InvalidKillSwitchArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid output encoding name: {0}.
        /// </summary>
        internal static string InvalidOutputEncoding {
            get {
                return ResourceManager.GetString("InvalidOutputEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename identifier switch must have valid &apos;from&apos; identifier: &apos;{0}&apos; is an invalid JavaScript identifier..
        /// </summary>
        internal static string InvalidRenameFromIdentifier {
            get {
                return ResourceManager.GetString("InvalidRenameFromIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename identifier switch must have valid &apos;from&apos; and &apos;to&apos; identifiers: &apos;{0}&apos; and &apos;{1}&apos; are both invalid JavaScript identifiers..
        /// </summary>
        internal static string InvalidRenameIdentifiers {
            get {
                return ResourceManager.GetString("InvalidRenameIdentifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename identifier switch must have valid &apos;to&apos; identifier: &apos;{0}&apos; is an invalid JavaScript identifier..
        /// </summary>
        internal static string InvalidRenameToIdentifier {
            get {
                return ResourceManager.GetString("InvalidRenameToIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid switch argument {0} for switch -{1}.
        /// </summary>
        internal static string InvalidSwitchArg {
            get {
                return ResourceManager.GetString("InvalidSwitchArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Tab Size: {0}.
        /// </summary>
        internal static string InvalidTabSizeArg {
            get {
                return ResourceManager.GetString("InvalidTabSizeArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to invalid warning level: {0}.
        /// </summary>
        internal static string InvalidWarningArg {
            get {
                return ResourceManager.GetString("InvalidWarningArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line.
        /// </summary>
        internal static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -GLOBAL parameter expects format: -GLOBAL:g[,g]*.
        /// </summary>
        internal static string MalformedGlobalsArg {
            get {
                return ResourceManager.GetString("MalformedGlobalsArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -MAP and -XML switches are not compatible.
        /// </summary>
        internal static string MapAndXmlArgs {
            get {
                return ResourceManager.GetString("MapAndXmlArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -O parameter must be followed by symbol map file path.
        /// </summary>
        internal static string MapArgNeedsPath {
            get {
                return ResourceManager.GetString("MapArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function.
        /// </summary>
        internal static string MemberInfoBuiltInMethod {
            get {
                return ResourceManager.GetString("MemberInfoBuiltInMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to object.
        /// </summary>
        internal static string MemberInfoBuiltInObject {
            get {
                return ResourceManager.GetString("MemberInfoBuiltInObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to property.
        /// </summary>
        internal static string MemberInfoBuiltInProperty {
            get {
                return ResourceManager.GetString("MemberInfoBuiltInProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  [defined ({0},{1})].
        /// </summary>
        internal static string MemberInfoDefinedLocation {
            get {
                return ResourceManager.GetString("MemberInfoDefinedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   {0} [{1}{2}]{3}{4}.
        /// </summary>
        internal static string MemberInfoFormat {
            get {
                return ResourceManager.GetString("MemberInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function expression.
        /// </summary>
        internal static string MemberInfoFunctionExpression {
            get {
                return ResourceManager.GetString("MemberInfoFunctionExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global const.
        /// </summary>
        internal static string MemberInfoGlobalConst {
            get {
                return ResourceManager.GetString("MemberInfoGlobalConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global function.
        /// </summary>
        internal static string MemberInfoGlobalFunction {
            get {
                return ResourceManager.GetString("MemberInfoGlobalFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global var.
        /// </summary>
        internal static string MemberInfoGlobalVar {
            get {
                return ResourceManager.GetString("MemberInfoGlobalVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const.
        /// </summary>
        internal static string MemberInfoLocalConst {
            get {
                return ResourceManager.GetString("MemberInfoLocalConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function.
        /// </summary>
        internal static string MemberInfoLocalFunction {
            get {
                return ResourceManager.GetString("MemberInfoLocalFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to literal var.
        /// </summary>
        internal static string MemberInfoLocalLiteral {
            get {
                return ResourceManager.GetString("MemberInfoLocalLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var.
        /// </summary>
        internal static string MemberInfoLocalVar {
            get {
                return ResourceManager.GetString("MemberInfoLocalVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to possibly undefined.
        /// </summary>
        internal static string MemberInfoPossiblyUndefined {
            get {
                return ResourceManager.GetString("MemberInfoPossiblyUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to built-in Global .
        /// </summary>
        internal static string MemberInfoScopeGlobalObject {
            get {
                return ResourceManager.GetString("MemberInfoScopeGlobalObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to local .
        /// </summary>
        internal static string MemberInfoScopeLocal {
            get {
                return ResourceManager.GetString("MemberInfoScopeLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to outer .
        /// </summary>
        internal static string MemberInfoScopeOuter {
            get {
                return ResourceManager.GetString("MemberInfoScopeOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to self-reference.
        /// </summary>
        internal static string MemberInfoSelfFuncExpr {
            get {
                return ResourceManager.GetString("MemberInfoSelfFuncExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to argument.
        /// </summary>
        internal static string MemberInfoTypeArgument {
            get {
                return ResourceManager.GetString("MemberInfoTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to arguments array.
        /// </summary>
        internal static string MemberInfoTypeArguments {
            get {
                return ResourceManager.GetString("MemberInfoTypeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to object property.
        /// </summary>
        internal static string MemberInfoWithField {
            get {
                return ResourceManager.GetString("MemberInfoWithField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [or {0}{1}].
        /// </summary>
        internal static string MemberInfoWithPossibly {
            get {
                return ResourceManager.GetString("MemberInfoWithPossibly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the &apos;-?&apos; command-line option for usage details..
        /// </summary>
        internal static string MiniUsageMessage {
            get {
                return ResourceManager.GetString("MiniUsageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbol map file already specified.
        /// </summary>
        internal static string MultipleMapArg {
            get {
                return ResourceManager.GetString("MultipleMapArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file already specified.
        /// </summary>
        internal static string MultipleOutputArg {
            get {
                return ResourceManager.GetString("MultipleOutputArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify multiple -RES arguments.
        /// </summary>
        internal static string MultipleResourceArgs {
            get {
                return ResourceManager.GetString("MultipleResourceArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify multiple -XML arguments.
        /// </summary>
        internal static string MultipleXmlArgs {
            get {
                return ResourceManager.GetString("MultipleXmlArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File already exists and clobber option is not set to true. Output not created: {0}.
        /// </summary>
        internal static string NoClobberError {
            get {
                return ResourceManager.GetString("NoClobberError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No input files to process.
        /// </summary>
        internal static string NoInput {
            get {
                return ResourceManager.GetString("NoInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No parsed code block.
        /// </summary>
        internal static string NoParsedCode {
            get {
                return ResourceManager.GetString("NoParsedCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOT KNOWN.
        /// </summary>
        internal static string NotKnown {
            get {
                return ResourceManager.GetString("NotKnown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -O parameter must be followed by output path.
        /// </summary>
        internal static string OutputArgNeedsPath {
            get {
                return ResourceManager.GetString("OutputArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minified output is EMPTY!.
        /// </summary>
        internal static string OutputEmpty {
            get {
                return ResourceManager.GetString("OutputEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file returned an error code: {0}.
        /// </summary>
        internal static string OutputFileError {
            get {
                return ResourceManager.GetString("OutputFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to output file.
        /// </summary>
        internal static string OutputFileErrorSubCat {
            get {
                return ResourceManager.GetString("OutputFileErrorSubCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output group #{0} returned an error code: {1}.
        /// </summary>
        internal static string OutputGroupError {
            get {
                return ResourceManager.GetString("OutputGroupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to output group.
        /// </summary>
        internal static string OutputGroupErrorSubCat {
            get {
                return ResourceManager.GetString("OutputGroupErrorSubCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output node contains no input nodes.
        /// </summary>
        internal static string OutputNoInputNodes {
            get {
                return ResourceManager.GetString("OutputNoInputNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pretty-print (-PRETTY) and Echo-input (-ECHO) switches are not compatible.
        /// </summary>
        internal static string PrettyAndEchoArgs {
            get {
                return ResourceManager.GetString("PrettyAndEchoArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing resource script {0}....
        /// </summary>
        internal static string ReadingResourceFile {
            get {
                return ResourceManager.GetString("ReadingResourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename switch must either have valid parameter parts or be followed by valid file path.
        /// </summary>
        internal static string RenameArgMissingParameterOrFilePath {
            get {
                return ResourceManager.GetString("RenameArgMissingParameterOrFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource argument &apos;{0}&apos; must be valid boolean or numeric literal.
        /// </summary>
        internal static string ResourceArgInvalidName {
            get {
                return ResourceManager.GetString("ResourceArgInvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resource file type: {0}. Must be .JS, .RESX, or .RESOURCES..
        /// </summary>
        internal static string ResourceArgInvalidType {
            get {
                return ResourceManager.GetString("ResourceArgInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource file of type .JS must not specify an object name on the -RES:name switch..
        /// </summary>
        internal static string ResourceArgNeedsNoName {
            get {
                return ResourceManager.GetString("ResourceArgNeedsNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -RES parameter must be followed by path to existing resource file.
        /// </summary>
        internal static string ResourceArgNeedsPath {
            get {
                return ResourceManager.GetString("ResourceArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource JS file must be a single var statement initializing a variable to an object literal.
        /// </summary>
        internal static string ResourceJSOneVar {
            get {
                return ResourceManager.GetString("ResourceJSOneVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML &lt;resource&gt; node missing required path attribute.
        /// </summary>
        internal static string ResourceNoPathAttr {
            get {
                return ResourceManager.GetString("ResourceNoPathAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gzip of output approximately {0} bytes ({1}% compression).
        /// </summary>
        internal static string SavingsGzipMessage {
            get {
                return ResourceManager.GetString("SavingsGzipMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original Size: {0} bytes; reduced size: {1} bytes ({2}% minification).
        /// </summary>
        internal static string SavingsMessage {
            get {
                return ResourceManager.GetString("SavingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output size: {0} bytes.
        /// </summary>
        internal static string SavingsOutputMessage {
            get {
                return ResourceManager.GetString("SavingsOutputMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file cannot be a folder: {0}.
        /// </summary>
        internal static string SourceFileIsFolder {
            get {
                return ResourceManager.GetString("SourceFileIsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file does not exist: {0}.
        /// </summary>
        internal static string SourceFileNotExist {
            get {
                return ResourceManager.GetString("SourceFileNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch -{0} requires an argument.
        /// </summary>
        internal static string SwitchRequiresArg {
            get {
                return ResourceManager.GetString("SwitchRequiresArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined Global References:.
        /// </summary>
        internal static string UndefinedGlobalHeader {
            get {
                return ResourceManager.GetString("UndefinedGlobalHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   {0} [{3}] at Line {1}, Column {2}.
        /// </summary>
        internal static string UndefinedInfo {
            get {
                return ResourceManager.GetString("UndefinedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected argument: {0}.
        /// </summary>
        internal static string UnexpectedArg {
            get {
                return ResourceManager.GetString("UnexpectedArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown input type. Please use either the -JS or -CSS switch..
        /// </summary>
        internal static string UnknownInputType {
            get {
                return ResourceManager.GetString("UnknownInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Scope Type: {0}.
        /// </summary>
        internal static string UnknownScopeType {
            get {
                return ResourceManager.GetString("UnknownScopeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UNREACHABLE.
        /// </summary>
        internal static string Unreachable {
            get {
                return ResourceManager.GetString("Unreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:
        ///{0} [([-JS] [JSOPTS])|([-CSS[:CSSTYP]] [CSSOPTS])] OPTS* ((IFILE* [-out OFILE] [-map MFILE])|(-xml XFILE [-out ODIR]))
        ///
        ///Valid OPTS are zero or more of:
        ///  -aspnet[:BOOL] &gt; whether to allow for inline ASP.NET-style substitutions,
        ///        &lt;% ... %&gt; Default is False. 
        ///  -braces:(new|same|source) &gt; when output is set to multiple lines, 
        ///        determines whether opening braces are written on their own new line, 
        ///        at the end of the previous line, or reflecting what is in the source
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify -XML argument AND input files.
        /// </summary>
        internal static string XmlArgHasInputFiles {
            get {
                return ResourceManager.GetString("XmlArgHasInputFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument -XML must be followed by XML file path.
        /// </summary>
        internal static string XmlArgNeedsPath {
            get {
                return ResourceManager.GetString("XmlArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML error: &lt;input&gt; file &apos;{0}&apos; does not exist.
        /// </summary>
        internal static string XmlInputNotExist {
            get {
                return ResourceManager.GetString("XmlInputNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input xml does not contain any &lt;output&gt; nodes.
        /// </summary>
        internal static string XmlNoOutputNodes {
            get {
                return ResourceManager.GetString("XmlNoOutputNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML error: &lt;resource&gt; file &apos;{0}&apos; does not exist.
        /// </summary>
        internal static string XmlResourceNotExist {
            get {
                return ResourceManager.GetString("XmlResourceNotExist", resourceCulture);
            }
        }
    }
}
